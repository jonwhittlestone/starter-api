name: Continuous Integration

on: [push]

env:
  WEB_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/web
  WEB_TEST_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/web-test

jobs:

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            ref: gh-action-for-ci
    #   - name: Add environment variables to .env
    #     run: |
    #       echo "DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/starter_db_dev" >> .env
    #       echo "ENV_FOR_DYNACONF=ci" >> .env
    #   - name: Set environment variables
    #     run: |
    #       echo "WEB_IMAGE=$(echo ${{env.WEB_IMAGE}} )" >> $GITHUB_ENV
    #       echo "NGINX_IMAGE=$(echo ${{env.NGINX_IMAGE}} )" >> $GITHUB_ENV
    #   - name: Log in to GitHub Packages
    #     run: echo ${PERSONAL_ACCESS_TOKEN} | docker login ghcr.io -u ${{ secrets.NAMESPACE }} --password-stdin
    #     env:
    #       PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    #   - name: Pull images
    #     run: |
    #       docker pull ${{ env.WEB_IMAGE }} || true
    #       docker pull ${{ env.NGINX_IMAGE }} || true
    #   - name: Build images
    #     run: |
    #       docker-compose -f docker-compose.ci.yml build
    #  - name: Test with pytest
    #     run: |
    #       pytest api -v
    #   - name: Push images
    #     run: |
    #       docker push ${{ env.WEB_IMAGE }}
    #       docker push ${{ env.NGINX_IMAGE }}